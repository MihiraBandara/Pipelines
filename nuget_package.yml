trigger:
 branches:
    include:
    - main
 paths:
    include:
    - <folder path>

variables:
  solution: '$(Build.SourcesDirectory)/<project path>/project.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  major: 1
  minor: 2

pool:
  vmImage: 'ubuntu-latest'

stages:

# Versioning main builds
- stage:
  displayName: Build_Version_Number
  jobs:
  - job: Build_Version_Number
    variables:
       patch: $[counter(variables['minor'], 0)]
    steps:
      - bash: |
           echo "##vso[build.updatebuildnumber]$(major).$(minor).$(patch)"
        name: SetBuildName
      - task: NuGetToolInstaller@1
      - task: NuGetCommand@2
        inputs:
          command: 'restore'
          restoreSolution: '$(Build.SourcesDirectory)/<project path>/project.csproj'
          feedsToUse: 'select'
          vstsFeed: '<Nuget feed Id>'
      - task: DotNetCoreCLI@2
        displayName: Building solution
        inputs:
          command: build
          projects: '$(Build.SourcesDirectory)/<project path>/project.csproj'
          arguments: '-c $(buildConfiguration)'

- stage: Package_Step
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  displayName: Package_Step
  jobs:  
  - job: Package_Step
    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '$(Build.SourcesDirectory)/<project path>/project.csproj'
        feedsToUse: 'select'
        vstsFeed: 'nuget feed id'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        packagesToPack: '$(Build.SourcesDirectory)/<project path>/project.csproj'
        versioningScheme: 'byBuildNumber' 
    - task: NuGetAuthenticate@0
    - task: NuGetCommand@2
      displayName: 'NuGet push'
      inputs:
        command: push
        publishVstsFeed: 'nuget feed id'
        allowPackageConflicts: false
        
